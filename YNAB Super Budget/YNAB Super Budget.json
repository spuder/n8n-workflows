{
  "name": "YNAB Auto Budget",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -80,
        608
      ],
      "id": "219be639-7a8b-4cf3-8b8d-54cfa084fedb",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5a1da0c7-e664-4662-b3b6-3a19cf54da36",
              "name": "budget_id",
              "value": "CHANGEME",
              "type": "string"
            },
            {
              "id": "7f849d4b-72ba-4d4a-82e0-485e5fdde1ba",
              "name": "account_id",
              "value": "CHANGEME",
              "type": "string"
            },
            {
              "id": "ae5133fe-f370-4d13-8be7-8c9cfe607574",
              "name": "api_key",
              "value": "CHANGEME",
              "type": "string"
            },
            {
              "id": "b5476fcc-763e-4a8d-97ca-2447cc8984d1",
              "name": "previous_days",
              "value": "45",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        144,
        608
      ],
      "id": "e320e200-279d-4d7b-8f9a-dbc90ce127ff",
      "name": "Variables"
    },
    {
      "parameters": {
        "url": "=https://api.ynab.com/v1/budgets/{{ $json.budget_id }}/categories",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.api_key }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        368,
        488
      ],
      "id": "fded027b-70ed-44e4-88fc-2b9ae9a73d21",
      "name": "Get Categories"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data.category_groups",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        592,
        488
      ],
      "id": "71e6736f-f3ff-438a-86d1-9cf9120e4ed4",
      "name": "Get Category Groups"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9dcb56d5-a68f-4fa1-9957-414c4b31673a",
              "leftValue": "={{ $json.hidden }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            },
            {
              "id": "0fdf4d82-5ab2-4e93-85dc-9941fb13f3b2",
              "leftValue": "={{ $json.deleted }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        816,
        488
      ],
      "id": "1c082196-26a7-40fe-995c-43b2c17c45fa",
      "name": "Remove Invalid Category Groups"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5ac0ef28-11d5-4a89-9a03-a807540a9c19",
              "leftValue": "={{ $json.hidden }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            },
            {
              "id": "96a8c890-a08b-4841-a14e-aa7d8f9a6d9e",
              "leftValue": "={{ $json.deleted }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            },
            {
              "id": "4984c1bb-a80b-4c30-8818-d614f2c3bf55",
              "leftValue": "={{ $json.category_group_name }}",
              "rightValue": "=\"Internal Master Category\"",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1264,
        488
      ],
      "id": "5d3bce98-2d5f-4bd4-8d1e-7f6686e1e73b",
      "name": "Hide Internal Categories"
    },
    {
      "parameters": {
        "fieldToSplitOut": "=categories",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1040,
        488
      ],
      "id": "19132f05-a6d1-4e16-a8b9-eaaf93ad25f9",
      "name": "Flatten Category Groups to Categories"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4a6fb057-55ab-4b67-bad6-77c505bea0f7",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f132fcc8-a3cd-4f78-b9f0-c0f6965f1e97",
              "name": "name",
              "value": "={{ $json.name }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1488,
        488
      ],
      "id": "dc74b4ed-a5e7-4a9e-b721-8f501261d716",
      "name": "Categories Only"
    },
    {
      "parameters": {
        "url": "=https://api.ynab.com/v1/budgets/{{ $json.budget_id }}/accounts/{{ $json.account_id }}/transactions",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "since_date",
              "value": "={{ $today.minus({ days: $json.previous_days }).format('yyyy-MM-dd') }}"
            },
            {
              "name": "type",
              "value": "uncategorized"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.api_key }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1040,
        680
      ],
      "id": "b98fa812-d775-46c2-ab4c-631de78b8069",
      "name": "Get Transactions"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data.transactions",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1264,
        680
      ],
      "id": "427d33a0-f867-49ec-9ed9-57a64e9f1969",
      "name": "Break out Transactions"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "abf0b4b4-ac98-4a9c-bd5d-2d09a7bd7942",
              "leftValue": "={{ $json.category_id }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "notExists",
                "singleValue": true
              }
            },
            {
              "id": "f1549604-56eb-48eb-892e-7896c65c206d",
              "leftValue": "={{ $json.deleted }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            },
            {
              "id": "abd3c4bf-7f6c-41a9-8142-47ccf3086244",
              "leftValue": "={{ $json.category_name }}",
              "rightValue": "Uncategorized",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "8e2bf6e6-3f70-4d19-9c4b-efa5ab246a70",
              "leftValue": "={{ $json.transfer_account_id?.toBoolean() }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "empty",
                "singleValue": true
              }
            },
            {
              "id": "f51eff3f-68ea-4695-816d-f1a346385be0",
              "leftValue": "={{ $json.transfer_transaction_id?.toBoolean() }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1488,
        680
      ],
      "id": "20d062e0-3197-4935-8566-bfae13e5caf6",
      "name": "Filter out transfers and invalid transactions"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1936,
        608
      ],
      "id": "6c763ed4-e51e-4d29-93f5-4610478d0c30",
      "name": "Merge"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "categories",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1712,
        488
      ],
      "id": "934c3ccd-94d6-4567-8a30-044d7e9dcd5c",
      "name": "Group Categories"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "transactions",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1712,
        680
      ],
      "id": "63ef450d-8c10-452f-aaf7-39dddeb52436",
      "name": "Group Transactions"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Given the following list of budget categories\n\n{{ JSON.stringify($('Categories Only').all(),null,2) }}\n\nAnalyze this json and come up with the most likely best fit for budget category, if you do not know or there is no good match then ignore it. \n\nIf you come up with a good match then change the output fields\noutput.category_id = budget.id\noutput.category_name = budget.name\noutput.flag_color = 'yellow'\noutput.flag_name = 'n8n'\n\nLeave all other fields alone and return them exactly as they were provided for the input. \n\nHere is the input data: \n{{  JSON.stringify($json,null,2) }}\n\n\n\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a helpful assistant who is tasked with categorizing budget items. "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        2608,
        608
      ],
      "id": "13ad851d-e43f-46e8-a90b-b2e9eed9931d",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "gpt-5-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2616,
        832
      ],
      "id": "a7e6d5de-86f6-4341-a033-86fcdeada5e0",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "hgh87ytGnFXvL4mw",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"id\": { \"type\": \"string\" },\n  \"date\": { \"type\": \"string\" },\n  \"amount\": { \"type\": \"number\" },\n  \"memo\": { \"type\": [\"string\", \"null\"] },\n  \"cleared\": { \"type\": \"string\" },\n  \"approved\": { \"type\": \"boolean\" },\n  \"flag_color\": { \"type\": [\"string\", \"null\"] },\n  \"flag_name\": { \"type\": [\"string\", \"null\"] },\n  \"account_id\": { \"type\": \"string\" },\n  \"account_name\": { \"type\": \"string\" },\n  \"payee_id\": { \"type\": [\"string\", \"null\"] },\n  \"payee_name\": { \"type\": [\"string\", \"null\"] },\n  \"category_id\": { \"type\": [\"string\", \"null\"] },\n  \"category_name\": { \"type\": [\"string\", \"null\"] },\n  \"transfer_account_id\": { \"type\": [\"string\", \"null\"] },\n  \"transfer_transaction_id\": { \"type\": [\"string\", \"null\"] },\n  \"matched_transaction_id\": { \"type\": [\"string\", \"null\"] },\n  \"import_id\": { \"type\": [\"string\", \"null\"] },\n  \"import_payee_name\": { \"type\": [\"string\", \"null\"] },\n  \"import_payee_name_original\": { \"type\": [\"string\", \"null\"] },\n  \"debt_transaction_type\": { \"type\": [\"string\", \"null\"] },\n  \"deleted\": { \"type\": \"boolean\" },\n  \"subtransactions\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": { \"type\": \"string\" },\n        \"transaction_id\": { \"type\": [\"string\", \"null\"] },\n        \"amount\": { \"type\": \"number\" },\n        \"memo\": { \"type\": [\"string\", \"null\"] },\n        \"payee_id\": { \"type\": [\"string\", \"null\"] },\n        \"payee_name\": { \"type\": [\"string\", \"null\"] },\n        \"category_id\": { \"type\": [\"string\", \"null\"] },\n        \"category_name\": { \"type\": [\"string\", \"null\"] },\n        \"transfer_account_id\": { \"type\": [\"string\", \"null\"] },\n        \"transfer_transaction_id\": { \"type\": [\"string\", \"null\"] },\n        \"deleted\": { \"type\": [\"boolean\", \"null\"] }\n      },\n      \"required\": [\"id\", \"amount\"]\n    },\n    \"minItems\": 0\n  }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        2744,
        832
      ],
      "id": "5c7d87fe-7ee3-4a8b-bb1c-90cd39966f99",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "fieldToSplitOut": "transactions",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2384,
        608
      ],
      "id": "fa5c461b-40a1-413a-82cd-8be3098d18ea",
      "name": "Loop Transactions"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "02774f04-b665-4fe5-9e64-ba067c8bc5f9",
              "leftValue": "={{ $json.transactions }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2160,
        608
      ],
      "id": "ccee6170-02b5-4e88-93c1-acbbf2b8bb91",
      "name": "Skip Categories, Loop Transactions"
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=Auto budgeted  {{ $json.transactions[0].length }} transactions.\n\n{{ $json.transactions[0].map(transaction => '- ' + transaction.payee_name + ' | ' + transaction.category_name + ' | $' + (transaction.amount / 1000)).join('\\n') }}\n\nhttps://app.ynab.com/{{$('Variables').item.json.budget_id}}/accounts/{{ $('Variables').item.json.account_id }}",
        "options": {
          "avatar_url": "https://images.icon-icons.com/401/PNG/512/YNAB_40408.png",
          "username": "YNAB Budget Bot"
        }
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        3408,
        416
      ],
      "id": "f8798e8d-0219-437a-8397-c5328f892127",
      "name": "Discord",
      "webhookId": "ff2f3f9e-8d88-49c4-bf61-cc3b507764ba",
      "credentials": {
        "discordWebhookApi": {
          "id": "jtusjd0AfNR35Ocl",
          "name": "Discord Webhook Budget Items"
        }
      }
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "=https://api.ynab.com/v1/budgets/{{$('Variables').item.json.budget_id}}/transactions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Variables').item.json.api_key }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"transactions\": {{ JSON.stringify($json.transactions, null, 2) }}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3408,
        680
      ],
      "id": "2230670b-f75d-44f7-80d1-25c88efa4472",
      "name": "YNAB modify transactions"
    },
    {
      "parameters": {
        "batchSize": 10,
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2960,
        608
      ],
      "id": "960d9537-f042-4e55-b9f4-49aecff6dfab",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "output",
              "renameField": true,
              "outputFieldName": "transactions"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        3184,
        608
      ],
      "id": "98cd53d7-5f74-410c-a84a-93e80da98b81",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "data.transactions"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        3184,
        416
      ],
      "id": "2925d200-77ee-4ac9-bf62-5eebc1e6ae47",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "content": "## YNAB Get Categories",
        "height": 272,
        "width": 1520
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        336,
        368
      ],
      "typeVersion": 1,
      "id": "c2347fc5-7fca-48fd-a7dc-9b962e573f16",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## YNAB Get Uncategorized Transactions\n",
        "height": 272,
        "width": 1520
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        336,
        656
      ],
      "typeVersion": 1,
      "id": "59ddf065-cafc-492a-a498-80a12c7a5413",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Category Matching\nLeverage Chat GPT to intelligently categorize uncategorized transactions.\nWith 4o-mini each transaction takes about 10 seconds. \nThere likely is room to speed this up. ",
        "height": 560,
        "width": 384
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2528,
        416
      ],
      "typeVersion": 1,
      "id": "e778a2e5-8301-464a-b226-83c27321576b",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Batch Upload\nBatch upload transactions.\nEach transaction will have the color changed to 'yellow' and tagged 'n8n. ",
        "height": 304,
        "width": 512
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3344,
        576
      ],
      "typeVersion": 1,
      "id": "8a15011b-7673-42a9-94e1-da27464ef4da",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Wait\nWait for parallel API calls to complete before moving on. ",
        "height": 448,
        "width": 384
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1920,
        448
      ],
      "typeVersion": 1,
      "id": "5c84c01f-7d83-41ce-8792-a104e4014f84",
      "name": "Sticky Note4"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Variables": {
      "main": [
        [
          {
            "node": "Get Categories",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Transactions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Categories": {
      "main": [
        [
          {
            "node": "Get Category Groups",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Category Groups": {
      "main": [
        [
          {
            "node": "Remove Invalid Category Groups",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Invalid Category Groups": {
      "main": [
        [
          {
            "node": "Flatten Category Groups to Categories",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Flatten Category Groups to Categories": {
      "main": [
        [
          {
            "node": "Hide Internal Categories",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Hide Internal Categories": {
      "main": [
        [
          {
            "node": "Categories Only",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Transactions": {
      "main": [
        [
          {
            "node": "Break out Transactions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Break out Transactions": {
      "main": [
        [
          {
            "node": "Filter out transfers and invalid transactions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Categories Only": {
      "main": [
        [
          {
            "node": "Group Categories",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter out transfers and invalid transactions": {
      "main": [
        [
          {
            "node": "Group Transactions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Skip Categories, Loop Transactions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Group Categories": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Group Transactions": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Loop Transactions": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Skip Categories, Loop Transactions": {
      "main": [
        [
          {
            "node": "Loop Transactions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YNAB modify transactions": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "YNAB modify transactions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Discord": {
      "main": [
        []
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a93d427b-07b3-4bce-a077-ee45dbd24d2f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ae3a7d69e340d9eec0196c03fd00e81b6e376d3084103c5850dd2cee1ac033f6"
  },
  "id": "gJVUOpQW1iQO8hDK",
  "tags": []
}